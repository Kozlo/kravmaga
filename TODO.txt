(DONE)- switch to using type Date, not string in the DB to be able to sort by date
(DONE)- don't allow the user to change the date from which he is a member (aka move member_from to 'admin_fields')
(DONE)- when a group is created, the list should be updated when creating a lesson
(DONE)- for lessons, also add 'end date/time'
(DONE)- password change changes
(DONE)- add gender field to user list
(DONE)- add proper validation to form fields (use react validate module)
(DONE)- implement some 'max length' (truncation) for user list fields (in case of a very long entry) (could be done together with general validation)
(DONE)- make it possible to add groups to users (not only vice versa)
(DONE)- fix cell sizes
(DONE)- increase the max size of the page (so that everything fits)
(DONE)- implement filters
(DONE)- implement config (e.g. to limit how many results should be shown
(DONE)// TODO: add sorters as well
(DONE)// TODO: replace limit with config as an object where limit and offset can be added
(DONE)- for lessons remove the functionality that adds an item to the top of the list (maybe re-request the list instead for now...)
- when deleting/updating data (e.g. user) all dependable data should be updated as well (e.g. the user should be removed from all groups)
  (DONE)- when deleting a user:
    (DONE)- remove user from groups he's in
      (DONE)- do this in the back-end
      (DONE)- update group store in the FE
    (DONE)- remove the user from lessons he's attending
      (DONE)- do this in the back-end
      (DONE)- update group and lesson stores in the FE
  - when updating a user
    - make sure the group store is up to date
    - MAYBE instead of removing from all groups and adding new ones:
      - store 2 arrays: existing groups and new groups
      - OR send the groups in batches, not 1 by 1
  - remove attending lesson when a user is removed from a group
    - do this in the BE
    - update lesson store in the FE (admin panel)
  (DONE)- remove lessons when a group is deleted
    (DONE)- do this in the BE
    (DONE)- update lesson store in the FE (admin panel)
  - when updating a group (e.g. it's members) need to update lesson attendance as well

Bugs from Ronis:
(DONE)#5 Lietotājam nomainot ieradīšanas statusu tiek pārkārtots “Manas nodarbības” saraksts
  - fixed with the new sorters
(DONE)#10 Adminam pievienojot lietotāju, bildes laukam ir apraksts “Saite uz manu profila bildi”

(DONE)#15 Lietotājam ierakstot nekorektu linku uz bildi vajag paziņot par problēmu

#20 Adminam nav iespējas apskatīt lietotāja profilu, tikai labojot:
  Vienīga iespēja kā apskatīties kāda lietotāja profilu ir Atvert to uz labošanu (poga Labot), bet ja ir vēlēšanas tikai apskatīt,
  piemēram, bildi, tad to nav iespējams izdarīt. Nepieciešams ļaut atvert skatīšanas režīma nospiežot uz bildes (vai vārda).
  Tas ir vajadzīgs, lai nejauši nesamainītu lietotāja datus.

(DONE)#25 Ja lietotājs tiek izdzēsts tas paliek pieskaitīts pie grupas

(DONE)#30 Lietotāju veidojot, pēc noklusējuma tas kļūst pievienots visām grupām

(DONE)#35 Lokācijas kolonnai ir pārāk mazs izmērs, ne vairāk ka 11 simboli
  Ir pietiekoši daudz vietas lai attēlotu vairāk simbolus kolonnā “Lokācija”, un ir liela varbūtība ka lokācijas nosaukumam būs vairāk burtu nekā 11.
  To varētu palielināt uz Ieradīsies vai datumu kolonu rēķina, jo šīs kolonnas vienmēr būs ar fiksēta skaita rakstzīmēm.

#40 Ja nodarbībai tiek nomainīta grupa tad vecās grupas dalībniekiem tā nodarbība vairs nerādās,
  bet pie “Ieradīsies” skaita lietotāji kuri ir atzīmējuši ka Ieradīsies paliek pieskaitīti.
  Iespējams vajadzīga papildus apstrāde
  Iespējams ir jāpaziņo kad nomaina nodarbībai grupu, ka tai jau ir dalībnieki kas ir atzīmējuši ka ieradīsies – līdzīgi ka ir kad dzēš nodarbību kurai ir pieteikušies dalībnieki
  Ja lietotājs apstiprina grupas izmaiņas tai nodarbībai, tad nodarbībai ir jāpazūd no lietotāju profiliem,
  kas bija agrāk norādītājā grupā (tā tas tagad arī notiek), un “Piedalīsies” skaitam ir jānomainās uz 0 (tagad paliek tāds ka bija vecajai grupai).

(DONE)#45 Nodarbību attēlošanas secība
  Nodarbības tiek sakārtotas tādā secībā kādā tās tika labotas, nav iespējas sakārtot pēc laika, grupas utml.
  Ja nevar tā, tad ieteicams kārtot pēc laika dilstoši, lai jaunākās ir augšā.
  - fixed with the new sorters/fitlers/config

(DONE)#50 Vienā lapā attēloto Nodarbību un Lietotāju skaits
  Nodarbības un lietotājus šobrīd attēlo tik daudz cik ir kopā, bet ieteicams rādīt, piemērām, pa 10 ar iespēju apskatīt nākamos.

(DONE)#55 Ieteicams sistēmas footerī pievienot saita/lietotnes versija, piemēram v.1.0

#13 Pēc grupas izdzēšanas nodarbības, kas tika izveidotas šai grupai paliek neizdzēstas, bet lietotājiem (lietotāju profilos) vairāk nerādās
  Nodarbību sarakstā nodarbības izveidotas ar izdzēstām grupām paliek neizdzēstas, bet lietotājiem vairāk nerādās.
  “Ieradīsies” skaits paliek tāds kāds bija, skaita arī lietotāju kuram nodarbība vairs nerādās.
  Kad grupa ir izdzēsta, grupas nosaukums nodarbībai mainās uz “Nezināma grupa”.
  Ieteikums ir rādīt nezināmas grupas nodarbību lietotājam kurš agrāk tai nodarbībai bija pieteicies (norādījis ka ieradīsies)
  un noņemt to no lietotāja kad nodarbībai tiek pielikta cita grupa, gadījumā ja lietotājs nav jaunas grupas dalībnieks,
  ja ir dalībnieks – nodarbība lietotājam sarakstā paliek un paliek atzīmēts “Ieradīšos”.
  “Ieradīsies” skaits brīdī kad nodarbībai tiek pielikta jauna grupa mainās uz 0 gadījumā,
   ja neviens no jaunas grupas dalībniekiem nav vecās grupas dalībnieks kurš ir norādījis ka ieradīsies.

  Vai ja ir izdzēsta grupa tad nodarbībai ar nezināmo grupu vienkārši nomainīt “Ieradīsies” skaitu uz nulli.

#14 Predefinētas lokācijas
  Izveidot lokāciju sarakstu līdzīgu ka ir grupām, ar iespēju izveidot, labot un dzēst. Pie lokācijas izvēles nodarbības veidošanas formā piedāvāt sarakstu ar lokācijām,
  lai nevadītu informāciju kas var atkārtoties ar roku bet pielikt ar vienu klikšķi. Atstāt iespēju ievadīt lokācijas nosaukumu brīvā tekstā,
  t.i. lokāciju ir jāvar izvēlēties gan no saraksta gan ievadīt pašam.  – Ja šis tiek taisīts, tad var veidot papildus pārbaudes pie nodarbības izveidošanas,
  vai uz konkrēto nodarbības laiku lokācija nav aizņemta un var arī izveidot skatu pa lokācijām kur būs nodarbību saraksts.
  - MAYBE add location filter to lessons as well
  - NEED TO RE-THINK THIS!!!!!! for now only pre-defined locations are added

- restyle the profile page
- improve the layout for buttons (maybe create an 'actions' button that toggles a modal with all of the actions)
- make it possible to add/remove attendees from lessons directly
  - make sure the data ir reflected everywhere
- add user groups to table (if needed)
- switch to webpack and add hot module re-load

- check if there are no double dependencies and see if they can be removed (like bootstrap, so react-bootstrap is used only
- add filters and limits to user (and other lists)
- consider looping through the form control and creating them dynamically instead of having separate entries

- optionally add the PUT method as well, but make sure it works as expected
- Add JSDoc to components (research this a bit as well)

Bugs:
- when the user reloads the page and turns out he is blocked, 2 error messages are shown (from navbar and profile page requests)
  - maybe I can leave this
- for lessons, when creating one the start and end dates are checked correctly, but when updating and usein 'runValidators', they are not (at least I can set end date before start)
  - could be I need to add custom validation there

-----------------------------------------------
Later
- sort lessons by start date properly
- when saving a group for lesson, attendee for users etc... consider adding validation check where the entry's existence is checked (maybe not... need to consider)
- when deleting a user, should also remove his ID from groups and lessons
- research about auth0 and JWT, should the token be automatically refreshed after a while if the user is active?
- read on node.js/Express security and consider adding https://www.npmjs.com/package/helmet
- add and use Node Security Project on the proejct https://blog.risingstack.com/node-js-security-checklist/ ALDO snyk (checks and fixes issues in your codebase)
- limit how long input can be (e.g. no 100+ char long emails)
  - maybe check mongoose/mongodb defaults
- check what algo crypto is using and see if can be updated if SHA1 (unsecure)
- add CSRF protection: https://blog.risingstack.com/node-js-security-checklist/
- test and add brute force protection to authentication: https://blog.risingstack.com/node-js-security-checklist/
- add es-list rules, based on air-bnb rules: https://github.com/airbnb/javascript#properties
- adda 404 page for the API
- add 'loading' state instead of just disabling the button: https://react-bootstrap.github.io/components.html#buttons-loading
- for admin panel in actions use: https://react-bootstrap.github.io/components.html#btn-groups-toolbar
- split up utils code into separate files
- research dependencies. maybe I don't nee both react and react-dom
- add a 'PUT' handler
- consider lazy loading for components to reduce initial JS file size
- when done with phase 1, read on releases and make it a major release

-----------------------------------------------
Notes:
Meeting notes (24th Feb):

- nodarbibas:
  - lauki: datums/laiks/grupa/vieta (drop-down + opcija briva teksta formata)/komentars (neobligats)
  - iespeja uzlikt ies/neies no lietotaja puses (prolly use active state and a button group)
  -

admin:
 - nodarbibu sadalja (cilveku skaits, kas pieteikusies, ne visi cilveki)
 - grupu sadalja


(DONE)profila dati:
  - atstat dzimumu
  - pievinot: telefons, dzimsanas datums, datums no kura ir biedrs, grupas (probably use react-boostrap multiple select control)
